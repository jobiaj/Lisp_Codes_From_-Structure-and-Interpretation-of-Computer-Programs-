(define (add-rat x y)
   (make-rat (+ (* (numer x) (denom y))
                (* (numer y) (denom x)))
             (* (denom x) (denom y))))
(define (sub-rat x y)
   (make-rat (- (* (numer x) (denom y))
                (* (numer y) (denom x)))
             (* (denom x) (denom x))))
(define (mul-rat x y)
   (make-rat (* (numer x) (numer y))
             (* (denom x) (denom y))))
(define (div-rat x y)
   (make-rat (* (numer x) (denom y))
             (* (denom x) (numer y))))
(define (equal-rat? x y)
   (= (* (numer x) (denom y))
      (* (numer y) (denom x))))
(define (make-rat n d) (cons n d))
(define (numer x) (car x))
(define (denom x) (cdr x))
(define (print-rat x)
   (newline)
   (display (numer x))
   (display "/")
   (display (denom x)))
(print-rat (add-rat (make-rat 1 2) (make-rat 1 3)))
(define (deter-sign n d)
   (cond ((< 0 (* n d))
          (if (< n 0)
              (make-rat (- n (- d))
              (make-rat n d)))
         (else (if (> n 0) (make-rat (- n) (- d))
                    (make-rat n d))))))
